/*
 * Author: Amarjit Pheiroijam
 * OS : Zorin OS 16 Core
 * Editor : Visual Studio Code 1.64.0
 * Created Date: Tuesday, February 22nd 2022, 11:49:41 pm
 * Year 2022
 */
import React, { useEffect, useState } from 'react';
import useSound from 'use-sound';
import Alita from './asset/alita-amarjit.png';
import intro from './asset/Intro.mp3';
import enterQs from './asset/question.mp3';
import pulse from './asset/pulse.svg';

import Box from '@mui/material/Box';
import LinearProgress from '@mui/material/LinearProgress';

const { Configuration, OpenAIApi } = require("openai");
const configuration = new Configuration({
  apiKey: process.env.REACT_APP_OPENAI,
});
const openai = new OpenAIApi(configuration);
const App = () => {
  const [progress, setProgress] = useState(0);
  const [running, setRunning] = useState(false);
  const [processing, setProcessing] = useState(false);
  const [play] = useSound(intro, { interrupt: true });
  const [playQuestion] = useSound(enterQs);
  const [question, setQuestion] = useState("");
  const [answer, setAnswer] = useState("");
  const [gotAnswer, setGotAnswer] = useState(false);
  const [count, setCount] = useState(0);
  useEffect(() => {

  }, [])
  function PlayIntro() {
    play();
    setTimeout(() => {
      setRunning(true);
      setCount(0);
      setAnswer("");
      setGotAnswer(false);
      playQuestion();
    }, 15000)
  }
  function handleSetQuestion(q) {
    setQuestion(q);
  }
  const ask = async () => {
    setProcessing(true);
    setProgress(0);

    //LOADING
    const timer = setInterval(() => {
      setProgress((oldProgress) => {
        if (oldProgress === 70) {
          return;
        }
        const diff = Math.random() * 10;
        return Math.min(oldProgress + diff, 100);
      });
    }, 300);

    if (count > 5) {
      setRunning(false);
      setProcessing(false);
      return;
    } else {
      var c = count + 1;
      setCount(c);
    }
    console.log("Question : ", question);
    const response = await openai.createCompletion("text-davinci-001", {
      prompt: question,
      temperature: 0.3,
      max_tokens: 150,
      top_p: 1.0,
      frequency_penalty: 0.0,
      presence_penalty: 0.0,
    });
    setAnswer(response.data.choices[0].text);
    console.log("Answer :", response.data.choices[0].text);
    setGotAnswer(true);
    setProgress(100);
    setProcessing(false);

  }
  return (
    <React.Fragment>
      {running ? <Running pulse={pulse} processing={processing}
        handleSetQuestion={handleSetQuestion}
        ask={ask} answer={answer}
        progress={progress}
        gotAnswer={gotAnswer} /> :
        <Introduction PlayIntro={PlayIntro} />}
    </React.Fragment>
  );
}


const Introduction = ({ PlayIntro }) => {
  return (
    <div className='grid place-items-center h-screen bg-black'>
      {/* // <div class="grid place-items-center h-screen bg-gradient-to-r from-cyan-400 via-purple-500 to-pink-500"> */}

      <p className='text-white text-5xl mt-8 font-thin'>
        Alita
      </p>
      <p className='text-white m-0 font-black text-sm'>
        KNOWLEDGE ANGEL
      </p>

      <div className='text-white text-center mx-8 text-sm decoration-dotted italic font-light'>
        Alita is a Artificial Intelligence cyborg,<br />
        Developed by Amarjit Pheiroijam,<br /> An Engineer, who realize that she actually has the soul of a teenager with a helpful attitude,
  She is still learning but she answers most of your questions.
        <br />
      </div>
      <div className='text-white text-center'>
        Powered by<br />
        <p className='font-light'>Generative Pre-trained Transformer 3</p>
      </div>
      <div className='max-w-sm'>
        <img src={Alita} onClick={PlayIntro} />
      </div>

    </div >
  )
}

const Running = ({ processing, pulse, handleSetQuestion, ask, answer, gotAnswer, progress }) => {
  return (
    <div class="m-10 h-screen ">
      <p className='text-black text-5xl mt-8 font-thin'>
        Alita
      </p>
      <p className='text-black m-0 font-black text-sm'>
        KNOWLEDGE ANGEL
      </p>

      <p className='text-black m-0 font-normal text-xs mt-2'>Generative Pre-trained Transformer 3 (GPT-3)
        is an autoregressive language model that uses deep learning to produce human-like text. <br /><br />

        The quality of the text generated by GPT-3 is so high that it can be difficult to determine whether
        or not it was written by a human, which has both benefits and risks.</p>

      <div className='mt-4 mb-2 font-bold text-xs'>Answer are based on existing knowledge.</div>

      <div className='mt-4 mb-2 font-bold font-medium font-light text-md text-sm'>Please Enter your Question.</div>
      <div><textarea rows="3" name="description" className='bg-gray-200 w-full p-5'
        onChange={(e) => {
          handleSetQuestion(e.target.value);
        }}
        placeholder='What is human life expectancy in the India?'>
      </textarea>

        <div className='text-gray-400 text-xs font-bold mt-1 mb-3'>Only five questions Per Session, Please be mindful !</div>
        {processing ?
          <LinearProgress variant="determinate" value={progress} color={"inherit"} />
          :
          <button class="bg-black text-white w-full h-10 mt-3" onClick={ask}>ASK</button>}
        {gotAnswer == true ? <>
          <div className='text-black mt-6 mb-2 font-black text-sm'>GENERATED ANSWER</div>
          <div className='font-bold text-xs'>{answer} </div>
        </> : <></>}
      </div >
    </div>

  );
}
export default App;
